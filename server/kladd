// function hit(room, playerIndex) {
    // const gameState = getGameState(room);
    // const player = gameState.players[playerIndex];
    // console.log("Player who is hitting: ");
    // console.log(player);
    // player.hand.push(gameState.deck.pop());

    // const playerScore = calculateScore(player.hand);

    // if (playerScore > 21) {
        // gameState.gameResult = `Player ${playerIndex + 1} busted!`;
        // gameState.activePlayer = -1; // Disable player actions
    // }
// }

// function stand(room, playerIndex) {
    // const gameState = getGameState(room);
    // const playerScore = calculateScore(gameState.players[playerIndex].hand);
    // let dealerScore = calculateScore(gameState.dealerHand);

    // while (dealerScore < 17) {
        // gameState.dealerHand.push(gameState.deck.pop());
        // dealerScore = calculateScore(gameState.dealerHand); // Update dealerScore within the loop
    // }

    // if (dealerScore > 21 || dealerScore < playerScore) {
        // gameState.gameResult = `Player ${playerIndex + 1} wins!`;
    // } else if (dealerScore === playerScore) {
        // gameState.gameResult = "It's a draw!";
    // } else {
        // gameState.gameResult = "Dealer wins!";
    // }

    // gameState.activePlayer = -1; // Disable player actions



// function hit(room, playerIndex) {
    // const gameState = getGameState(room);
    // const player = gameState.players[playerIndex];
    // console.log("This player is hitting: ");
    // console.log(player);
    // player.hand.push(gameState.deck.pop());

    // const playerScore = calculateScore(player.hand);

    // if (playerScore > 21) {
        // gameState.gameResult = `Player ${playerIndex + 1} busted!`;
        // Set the active player to the next player in the list or disable player actions if all players have played
        // if (playerIndex < gameState.players.length - 1) {
            // gameState.activePlayer = playerIndex + 1;
        // } else {
            // gameState.activePlayer = -1; // Disable player actions
        // }
    // }
// }

// function stand(room, playerIndex) {
    // const gameState = getGameState(room);
    // const playerScore = calculateScore(gameState.players[playerIndex].hand);
    // let dealerScore = calculateScore(gameState.dealerHand);

    // while (dealerScore < 17) {
        // gameState.dealerHand.push(gameState.deck.pop());
        // dealerScore = calculateScore(gameState.dealerHand); // Update dealerScore within the loop
    // }

    // if (dealerScore > 21 || dealerScore < playerScore) {
        // gameState.gameResult = `Player ${playerIndex + 1} wins!`;
    // } else if (dealerScore === playerScore) {
        // gameState.gameResult = "It's a draw!";
    // } else {
        // gameState.gameResult = "Dealer wins!";
    // }

    // Set the active player to the next player in the list or disable player actions if all players have played
    // if (playerIndex < gameState.players.length - 1) {
        // gameState.activePlayer = playerIndex + 1;
    // } else {
        // gameState.activePlayer = -1; // Disable player actions
    // }
// }


Version 3.0

// function hit(room, playerIndex) {
    // const gameState = getGameState(room);
    // const player = gameState.players[playerIndex];
    // console.log("This player is hitting: ");
    // console.log(player);
    // player.hand.push(gameState.deck.pop());

    // if (isBusted(room, playerIndex)) {
        // console.log('BUSTED!!!!');
        // gameState.gameResult = `${player.name} busted!`;
        // Set the active player to the next player in the list or disable player actions if all players have played
        // if (playerIndex < gameState.players.length - 1) {
            // gameState.activePlayer = playerIndex + 1;
        // } else {
            // gameState.activePlayer = -1; // Disable player actions
            // dealerPlays(room); // Make the dealer play after all players have played
        // }
    // }//
// }

// function stand(room, playerIndex) {
    // const gameState = getGameState(room);
    // const playerScore = calculateScore(gameState.players[playerIndex].hand);

    // console.log('STANDING!!!');
    // Set the active player to the next player in the list or disable player actions if all players have played
    // if (playerIndex < gameState.players.length - 1) {
        // gameState.activePlayer = playerIndex + 1;
    // } else {
        // gameState.activePlayer = -1; // Disable player actions
        // dealerPlays(room); // Make the dealer play after all players have played
    // }

    // const dealerScore = calculateScore(gameState.dealerHand);

    // if (dealerScore > 21 || dealerScore < playerScore) {
        // gameState.gameResult = `${gameState.players[playerIndex].name} wins over the dealer!`;
    // } else if (dealerScore === playerScore) {
        // gameState.gameResult = `It is a draw between ${gameState.players[playerIndex].name} and the dealer!`;
    // } else {
        // gameState.gameResult = `The dealer wins over ${gameState.players[playerIndex].name}!`;
    // }
// }



function determineResults(room) {
    const gameState = getGameState(room);
    const dealerScore = calculateScore(gameState.dealerHand);

    gameState.players.forEach(async (player) => {
        const playerScore = calculateScore(player.hand);
        const user = model.findUserById(player.name);
        if (player.checkBust === false && player.isWaiting === false) {
            if (dealerScore > 21 || dealerScore < playerScore) {
                gameState.gameResult += `* ${player.name} wins over the dealer!\n`;
                user.won += 1;
                user.played += 1;
            } else if (dealerScore === playerScore) {
                gameState.gameResult += `* It is a draw between ${player.name} and the dealer!\n`;
                user.played += 1;
            } else {
                gameState.gameResult += `* The dealer wins over ${player.name}!\n`;
                user.played += 1;
            }
            const updateStatement = await db.prepare('UPDATE users SET played = ? AND won = ? WHERE username = ?');
            updateStatement.run(user.played, user.won, user.username);
            console.log("Update of database complete.");
            console.log("New values: ");
            console.log(user.username);
            console.log(user.won);
            console.log(user.played);

        }
    });
}